
services:
  clash:
    image: dreamacro/clash:latest
    container_name: clash
    restart: unless-stopped
    ports:
      - "${CLASH_HTTP_PORT:-7890}:7890"
      - "${CLASH_SOCKS_PORT:-7891}:7891"
      - "${CLASH_CONTROL_PORT:-9090}:9090"
    environment:
      - CLASH_SECRET=${CLASH_SECRET}
    volumes:
      - ./config:/root/.config/clash
      - ./data:/root/.config/clash/data
    networks:
      - clash-network
    command: -d /root/.config/clash -ext-ctl ${CLASH_EXTERNAL_CONTROLLER:-0.0.0.0:9090} -secret ${CLASH_SECRET}
    depends_on:
      - config-generator

  config-generator:
    image: alpine:latest
    container_name: clash-config-generator
    volumes:
      - .:/workspace
    working_dir: /workspace
    env_file:
      - .env
    command: >
      sh -c "
        apk add --no-cache gettext python3 py3-yaml &&
        echo 'Checking for config generation script...' &&
        if [ ! -f './scripts/generate-config-universal.sh' ]; then
          echo 'generate-config-universal.sh not found, using available script...' &&
          if [ -f './scripts/generate-config-advanced.sh' ]; then
            echo 'Using generate-config-advanced.sh' &&
            cp ./scripts/generate-config-advanced.sh ./scripts/generate-config-universal.sh &&
            chmod +x ./scripts/generate-config-universal.sh
          elif [ -f './scripts/generate-config.sh' ]; then
            echo 'Using generate-config.sh' &&
            cp ./scripts/generate-config.sh ./scripts/generate-config-universal.sh &&
            chmod +x ./scripts/generate-config-universal.sh
          else
            echo 'ERROR: No config generation script found!' &&
            exit 1
          fi
        fi &&
        echo 'Starting config generation...' &&
        ./scripts/generate-config-universal.sh generate .env &&
        echo 'Configuration generation completed successfully'
      "
    networks:
      - clash-network
    restart: "no"

  nginx:
    image: nginx:alpine
    container_name: clash-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-8088}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config:/usr/share/nginx/clash-config:ro
      - ./html:/usr/share/nginx/html:ro
    depends_on:
      - clash
      - config-generator
    networks:
      - clash-network

networks:
  clash-network:
    driver: bridge

volumes:
  clash-config:
  clash-data: