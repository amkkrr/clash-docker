events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    server {
        listen 80;
        server_name localhost;

        # Clash配置文件下载 - 主要用途
        location / {
            root /usr/share/nginx/clash-config;
            index config.yaml;
            
            # 为YAML文件设置正确的Content-Type
            location ~ \.ya?ml$ {
                add_header Content-Type "text/yaml; charset=utf-8";
                add_header Content-Disposition "attachment; filename=$1";
                
                # 允许跨域访问（用于订阅更新）
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET";
                add_header Access-Control-Allow-Headers "Content-Type";
            }
            
            try_files $uri $uri/ =404;
        }

        # Clash配置文件直接访问
        location = /config.yaml {
            alias /usr/share/nginx/clash-config/config.yaml;
            add_header Content-Type "text/yaml; charset=utf-8";
            add_header Access-Control-Allow-Origin *;
        }

        # Clash API Proxy (用于管理界面)
        location /api/ {
            proxy_pass http://clash:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers for dashboard access
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                return 204;
            }
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Dashboard管理界面
        location /dashboard/ {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /dashboard/index.html;
        }

        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}