# Nginx 测试环境配置
# 优化的性能和安全设置

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # 性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16m;

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # 限制请求速率
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=config:10m rate=1r/s;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;

        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        # 主配置文件访问 - 带速率限制
        location = /config.yaml {
            limit_req zone=config burst=3 nodelay;
            alias /usr/share/nginx/clash-config/config.yaml;
            
            # YAML 特定配置
            add_header Content-Type "text/yaml; charset=utf-8";
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            
            # CORS 支持
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                add_header Access-Control-Max-Age 86400;
                return 204;
            }
        }

        # Clash配置目录访问
        location /config/ {
            limit_req zone=config burst=5 nodelay;
            root /usr/share/nginx/clash-config;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            
            location ~ \.ya?ml$ {
                add_header Content-Type "text/yaml; charset=utf-8";
                add_header Access-Control-Allow-Origin "*";
            }
        }

        # API 代理 - 带速率限制
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://clash-test:19090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # CORS 支持
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                add_header Access-Control-Max-Age 86400;
                return 204;
            }
            
            # WebSocket 支持
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # 管理界面
        location /dashboard/ {
            try_files $uri $uri/ /dashboard/index.html;
            
            # 缓存设置
            location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1d;
                add_header Cache-Control "public, immutable";
            }
        }

        # 主页
        location / {
            try_files $uri $uri/ /index.html;
        }

        # 健康检查
        location /health {
            access_log off;
            add_header Content-Type "application/json";
            return 200 '{"status":"healthy","service":"clash-nginx","timestamp":"$time_iso8601"}';
        }

        # 指标端点
        location /metrics {
            access_log off;
            add_header Content-Type "text/plain";
            return 200 "# HELP nginx_connections_active Active connections\n# TYPE nginx_connections_active gauge\nnginx_connections_active $connections_active\n";
        }

        # Nginx 状态
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.30.0.0/16;
            deny all;
        }

        # 安全设置 - 隐藏敏感路径
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~* \.(env|log|bak|backup|sql|config)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}